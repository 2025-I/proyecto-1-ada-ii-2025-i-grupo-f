name: Python Check with Conda

on: [push]

jobs:
  build-linux:
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Miniconda
      uses: conda-incubator/setup-miniconda@v2
      with:
        python-version: 3.8
        auto-update-conda: true
        activate-environment: myenv
        environment-file: environment.yml

    - name: Install flake8 and pytest-cov
      run: |
        conda install -n myenv flake8 pytest pytest-cov

    - name: Check syntax (compilation)
      run: |
        conda run -n myenv python -m py_compile src/fiesta.py
        conda run -n myenv python -m py_compile src/subsecuencias.py
        if [ $? -eq 0 ]; then echo "fiesta.py: correcto"; echo "subsecuencias.py: correcto"; else echo "Errores en la compilación"; fi

    - name: Lint with flake8
      run: |
        echo "Ejecutando flake8..."
        ERRORS=$(conda run -n myenv flake8 src/ \
          --ignore=W391,W292,F401,E302,E712,E501,E261,E262,E305,E301,E114,E117,W291,W293,E225 \
          || true)

        echo "$ERRORS"

        check_passed() {
          FILE=$1
          if echo "$ERRORS" | grep -q "$FILE"; then
            echo "$FILE: errores encontrados"
          else
            echo "$FILE: correcto"
          fi
        }

        check_passed "src/fiesta.py"
        check_passed "src/subsecuencias.py"

    - name: Generate coverage report
      run: |
        echo "Generando coverage.xml..."
        conda run -n myenv pytest --cov=src --cov-report=xml tests/ || true
        ls -lh coverage.xml || echo "No se generó coverage.xml"

    - name: SonarCloud Scan
      uses: SonarSource/sonarcloud-github-action@v2
      with:
        args: >
          -Dsonar.projectKey=2025-I_proyecto-1-ada-ii-2025-i-grupo-f
          -Dsonar.organization=2025-i
          -Dsonar.sources=src
          -Dsonar.tests=tests
          -Dsonar.python.version=3.8
          -Dsonar.python.coverage.reportPaths=coverage.xml
          -Dsonar.verbose=true
      env:
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}













